{"version":3,"sources":["components/NewTask/TaskForm.module.css","components/UI/Section.js","components/Tasks/TaskItem.js","components/Tasks/Tasks.js","components/NewTask/TaskForm.js","components/NewTask/NewTask.js","hooks/use-http.js","App.js","index.js","components/UI/Section.module.css","components/Tasks/TaskItem.module.css","components/Tasks/Tasks.module.css"],"names":["module","exports","Section","props","className","classes","section","children","TaskItem","task","Tasks","taskList","items","length","map","text","id","content","error","onClick","onFetch","loading","container","TaskForm","taskInputRef","useRef","form","onSubmit","event","preventDefault","enteredValue","current","value","trim","onEnterTask","type","ref","NewTask","useState","isLoading","setIsLoading","setError","enterTaskHandler","taskText","fetch","method","body","JSON","stringify","headers","response","ok","Error","json","data","generatedId","name","createdTask","onAddTask","message","useHttp","requestConfig","applyData","sendRequest","useCallback","url","App","tasks","setTasks","transformTasks","taskObj","loadedTasks","taskKey","push","fetchTasks","useEffect","Fragment","prevTasks","concat","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.fd89cdc0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"TaskForm_form__HIDMk\"};","import classes from './Section.module.css';\n\nconst Section = (props) => {\n  return <section className={classes.section}>{props.children}</section>;\n};\n\nexport default Section;\n","import classes from './TaskItem.module.css';\n\nconst TaskItem = (props) => {\n  return <li className={classes.task}>{props.children}</li>\n};\n\nexport default TaskItem;","import Section from '../UI/Section';\nimport TaskItem from './TaskItem';\nimport classes from './Tasks.module.css';\n\nconst Tasks = (props) => {\n  let taskList = <h2>No tasks found. Start adding some!</h2>;\n\n  if (props.items.length > 0) {\n    taskList = (\n      <ul>\n        {props.items.map((task) => (\n          <TaskItem key={task.id}>{task.text}</TaskItem>\n        ))}\n      </ul>\n    );\n  }\n\n  let content = taskList;\n\n  if (props.error) {\n    content = <button onClick={props.onFetch}>Try again</button>;\n  }\n\n  if (props.loading) {\n    content = 'Loading tasks...';\n  }\n\n  return (\n    <Section>\n      <div className={classes.container}>{content}</div>\n    </Section>\n  );\n};\n\nexport default Tasks;\n","import { useRef } from 'react';\n\nimport classes from './TaskForm.module.css';\n\nconst TaskForm = (props) => {\n  const taskInputRef = useRef();\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredValue = taskInputRef.current.value;\n\n    if (enteredValue.trim().length > 0) {\n      props.onEnterTask(enteredValue);\n    }\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <input type='text' ref={taskInputRef} />\n      <button>{props.loading ? 'Sending...' : 'Add Task'}</button>\n    </form>\n  );\n};\n\nexport default TaskForm;\n","import { useState } from 'react';\n\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\n\nconst NewTask = props => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const enterTaskHandler = async taskText => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        'https://tasks-353e1-default-rtdb.firebaseio.com/tasks.json',\n        {\n          method: 'POST',\n          body: JSON.stringify({ text: taskText }),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = { id: generatedId, text: taskText };\n\n      props.onAddTask(createdTask);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n","import { useState, useCallback } from 'react';\r\n\r\nconst useHttp = (requestConfig, applyData) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const sendRequest = useCallback(\r\n    async taskText => {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      try {\r\n        const response = await fetch(requestConfig.url, {\r\n          method: requestConfig.method || 'GET',\r\n          headers: requestConfig.headers || {},\r\n          body: JSON.stringify(requestConfig.body) || null,\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Request failed!');\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        applyData(data);\r\n      } catch (err) {\r\n        setError(err.message || 'Something went wrong!');\r\n      }\r\n      setIsLoading(false);\r\n    },\r\n    [applyData]\r\n  );\r\n\r\n  return { isLoading, error, sendRequest };\r\n};\r\n\r\nexport default useHttp;\r\n","import React, { useEffect, useState, useCallback } from 'react';\n\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\n\nimport useHttp from './hooks/use-http';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  const transformTasks = useCallback(taskObj => {\n    const loadedTasks = [];\n\n    for (const taskKey in taskObj) {\n      loadedTasks.push({ id: taskKey, text: taskObj[taskKey].text });\n    }\n\n    setTasks(loadedTasks);\n  }, []);\n\n  const {\n    isLoading,\n    error,\n    sendRequest: fetchTasks,\n  } = useHttp(\n    {\n      url: 'https://tasks-353e1-default-rtdb.firebaseio.com/tasks.json',\n    },\n    transformTasks\n  );\n\n  useEffect(() => {\n    fetchTasks();\n  }, [fetchTasks]);\n\n  const taskAddHandler = task => {\n    setTasks(prevTasks => prevTasks.concat(task));\n  };\n\n  return (\n    <React.Fragment>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks\n        items={tasks}\n        loading={isLoading}\n        error={error}\n        onFetch={fetchTasks}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2bvPx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"TaskItem_task__2U7w1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Tasks_container__3jPgK\"};"],"sourceRoot":""}